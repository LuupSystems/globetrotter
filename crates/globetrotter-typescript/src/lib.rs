#![allow(warnings)]

pub mod config;

#[cfg(feature = "oxc")]
mod ast_oxc;
#[cfg(feature = "swc")]
mod ast_swc;

#[cfg(feature = "swc")]
pub use ast_swc::generate_translations_type_export;
#[cfg(feature = "swc")]
pub use ast_swc::Error;

pub use config::OutputConfig;

#[cfg(feature = "oxc")]
pub use ast_oxc::build_interface_ast;

pub fn preamble() -> String {
    unindent::unindent(&format!(
        "\
        //
        // AUTOGENERATED. DO NOT EDIT.
        // generated by globetrotter v{}.
        //
        ",
        std::env!("CARGO_PKG_VERSION"),
    ))
}

#[cfg(test)]
pub mod tests {
    use color_eyre::eyre;

    static INIT: std::sync::Once = std::sync::Once::new();

    /// Initialize test
    ///
    /// This ensures `color_eyre` is setup once.
    pub fn init() {
        INIT.call_once(|| {
            color_eyre::install().ok();
        });
    }
}
