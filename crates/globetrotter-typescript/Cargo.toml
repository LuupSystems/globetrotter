[package]
name = "globetrotter-typescript"
license = "MIT"
readme = "../../README.md"
documentation = "https://docs.rs/globetrotter-typescript"
publish = true

version.workspace = true
edition.workspace = true
authors.workspace = true
description.workspace = true
homepage.workspace = true
repository.workspace = true
categories = [
  "command-line-utilities",
  "internationalization",
  "localization",
]
keywords = [
  "i8n",
  "internationalization",
  "translations",
  "typescript",
]

[features]
default = ["swc"]
swc = ["dep:swc_core", "dep:anyhow"]

[package.metadata.cargo-feature-combinations]
exclude_features = ["default"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
globetrotter-model = { path = "../globetrotter-model" }
thiserror.workspace = true
tracing.workspace = true

unindent = "0"

# optional: swc based typescript codegen
swc_core = { version = "22", features = ["base", "common", "ecma_ast"], optional = true }
anyhow = { version = "1", optional = true }

# serialization
serde = { workspace = true }
serde_json = { workspace = true }

[dev-dependencies]
color-eyre.workspace = true
similar-asserts.workspace = true
indoc = "2"
# include ecma parser for reference
swc_core = { version = "22", features = ["base", "common", "ecma_ast", "ecma_parser"] }
